import posixJoin from '#tools/posixJoin';
import * as env from '#tools/testenv';

export default [
  {
    outputFilePath: posixJoin(env.exampleOutputPath, 'ICollege.json'),
    definitions: {
      IProfessor: {
        type: 'object',
        properties: {
          name: {
            type: 'string',
            minLength: 2,
            maxLength: 255,
          },
          major: {
            $ref: '#/definitions/IMajor',
          },
          college: {
            $ref: '#/definitions/ICollege',
          },
        },
        required: ['name', 'major', 'college'],
      },
      IMajor: {
        type: 'object',
        properties: {
          name: {
            type: 'string',
            minLength: 2,
            maxLength: 255,
          },
          desc: {
            type: 'string',
            maxLength: 2048,
          },
        },
        required: ['name'],
      },
      ICollege: {
        type: 'object',
        properties: {
          name: {
            type: 'string',
            minLength: 2,
            maxLength: 255,
          },
          address: {
            type: 'string',
            minLength: 64,
            maxLength: 1024,
          },
          professors: {
            type: 'array',
            items: {
              $ref: '#/definitions/IProfessor',
            },
          },
        },
        required: ['name', 'address', 'professors'],
      },
    },
    generator: 'tsj',
    banner: '// generated by tjscli: ts-json-schema-generator',
    filePath: posixJoin(env.exampleType01Path, 'ICollege.ts'),
    formatted: '',
    typeName: 'ICollege',
    schema: {
      $schema: 'http://json-schema.org/draft-07/schema#',
      type: 'object',
      properties: {
        name: {
          type: 'string',
          minLength: 2,
          maxLength: 255,
        },
        address: {
          type: 'string',
          minLength: 64,
          maxLength: 1024,
        },
        professors: {
          type: 'array',
          items: {
            $ref: '#/definitions/IProfessor',
          },
        },
      },
      required: ['name', 'address', 'professors'],
      definitions: undefined,
    },
    reasons: [],
  },
  {
    outputFilePath: posixJoin(env.exampleOutputPath, 'sub', 'IStudent.json'),
    definitions: {
      IMajor: {
        type: 'object',
        properties: {
          name: {
            type: 'string',
            minLength: 2,
            maxLength: 255,
          },
          desc: {
            type: 'string',
            maxLength: 2048,
          },
        },
        required: ['name'],
      },
    },
    banner: '// generated by tjscli: ts-json-schema-generator',
    generator: 'tsj',
    filePath: posixJoin(env.exampleType01Path, 'sub', 'IStudent.ts'),
    formatted: '',
    typeName: 'IStudent',
    schema: {
      $schema: 'http://json-schema.org/draft-07/schema#',
      type: 'object',
      properties: {
        name: {
          type: 'string',
          minLength: 2,
          maxLength: 255,
        },
        major: {
          type: 'array',
          items: {
            $ref: '#/definitions/IMajor',
          },
        },
        projessor: {
          type: 'string',
          minLength: 2,
          maxLength: 255,
        },
        college: {
          type: 'string',
          minLength: 2,
          maxLength: 255,
        },
      },
      required: ['name', 'major', 'projessor', 'college'],
      definitions: undefined,
    },
    reasons: [],
  },
];
